version: '3.8'

services:
  app:
    image: node:20-alpine
    working_dir: /app
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - NODE_ENV=development
      - HOST=0.0.0.0
    command: sh -c "npm install && npx prisma generate && npm run dev"
    depends_on:
      - db

  db:
    image: postgres:16
    container_name: skylite-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

# services:
#   app:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     ports:
#       - "3000:3000"
#     volumes:
#       - .:/app
#       - /app/node_modules
#     environment:
#       - DATABASE_URL=postgresql://postgres:postgres@db:5432/skylite
#       - NODE_ENV=development
#     depends_on:
#       - db

#   db:
#     image: postgres:16-alpine
#     ports:
#       - "5432:5432"
#     environment:
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=postgres
#       - POSTGRES_DB=skylite
#     volumes:
#       - postgres_data:/var/lib/postgresql/data

# volumes:
#   postgres_data: 